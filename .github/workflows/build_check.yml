name: CI Pipeline

on:
  pull_request:
    branches:
      - main

jobs:
  quality-check:
    runs-on: ubuntu-latest
    
    services:
      # Inicia un contenedor de PostgreSQL para las pruebas
      postgres:
        image: postgres:15 # Usar una versión específica es una buena práctica
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        # Opciones para verificar que la base de datos esté lista antes de continuar
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    env:
      # La URL de la base de datos que usarán los pasos de prueba y migración
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/testdb
      # Asegura que se usen las variables de entorno de CI
      NODE_ENV: test 

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # --- NUEVOS PASOS DE CALIDAD ---

      - name: Run Linter
        run: npm run lint

      - name: Run Tests
        run: npm test # Asegúrate de tener un script de 'test' en tu package.json

      - name: Run Database Migrations (Build Step)
        run: npx sequelize-cli db:migrate
